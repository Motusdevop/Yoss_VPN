from typing import List

from aiogram.types import KeyboardButton, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup

from tools import vpn, api
from models import Server, User, Tariff
from repository import ServerRepository, TariffRepository


class Menu():
    kb = [[KeyboardButton(text='–ö—É–ø–∏—Ç—å/–ø—Ä–æ–¥–ª–∏—Ç—å VPN üåê')],
          [KeyboardButton(text='–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ ‚ùî'), KeyboardButton(text='–û –Ω–∞—Å üìñ')],
          [KeyboardButton(text='–ú–æ–π VPN üìÇ')]]

    markup = ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)

class Choose_Instruction():
    kb = [[KeyboardButton(text='Windows/MacOS/Linux'), KeyboardButton(text='Android/IOS')]]

    markup = ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)

class Contact():
    kb = [[KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç ‚òéÔ∏è', request_contact=True)]]

    markup = ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)

class ServerKeyboard():
    def __init__(self):
        self.server_list: List[Server] = ServerRepository.get_all()

        if not len(self.server_list) == 0:
            self.kb = [[InlineKeyboardButton(text=server.country + f'[{server.id}] –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π: {server.count_of_configs}/20',
                                             callback_data=str(server.id))] for
                       server in self.server_list if server.count_of_configs < 20 and api.ping(f'http://{server.address}:{server.port}/')]
            self.kb.append([InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='no_servers')])
        else:
            self.kb = [[InlineKeyboardButton(text='–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤', callback_data='no_servers')]]

        self.markup = InlineKeyboardMarkup(inline_keyboard=self.kb)

class TariffKeyboard():
    def __init__(self, user: User, extend=False):

        self.kb = [[]]

        tariff_one_month = TariffRepository.get(1) # 1 –º–µ—Å—è—Ü
        tariff_three_month = TariffRepository.get(2) # 3 –º–µ—Å—è—Ü–∞

        if user.free_trial and not extend:
            self.kb = [[InlineKeyboardButton(text='2 –¥–Ω—è, –ë–µ—Å–ø–ª–∞—Ç–Ω–æ', callback_data='free_trial')]]

        self.kb.append([InlineKeyboardButton(text=f'1 –º–µ—Å—è—Ü, {tariff_one_month.price} —Ä—É–±–ª–µ–π', callback_data='one_month')])
        self.kb.append([InlineKeyboardButton(text=f'3 –º–µ—Å—è—Ü–∞, {tariff_three_month.price} —Ä—É–±–ª–µ–π', callback_data='three_month')])
        self.kb.append([InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel')])

        self.markup = InlineKeyboardMarkup(inline_keyboard=self.kb)

class CheckPay():
    kb = [[InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É', callback_data='check'), InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel')]]

    markup = InlineKeyboardMarkup(inline_keyboard=kb)

class BuyOrExtend():
    kb = [[InlineKeyboardButton(text='–ö—É–ø–∏—Ç—å', callback_data='buy'), InlineKeyboardButton(text='–ü—Ä–æ–¥–ª–∏—Ç—å', callback_data='extend')]]

    markup = InlineKeyboardMarkup(inline_keyboard=kb)

class MyVPNKeyboard():
    kb = [[InlineKeyboardButton(text='–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é', callback_data='get_config')],
          [InlineKeyboardButton(text='–ü—Ä–æ–¥–ª–∏—Ç—å', callback_data='extend'),
           InlineKeyboardButton(text='–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥', callback_data='recreate')],
          [InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel')]]

    markup = InlineKeyboardMarkup(inline_keyboard=kb)

class UserManagementKeyboard():
    kb = [[InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç', callback_data='delete'),
           InlineKeyboardButton(text='–ü–æ–¥–ø–∏—Å–∫–∏', callback_data='subscriptions')]]

    markup = InlineKeyboardMarkup(inline_keyboard=kb)

class SubscriptionKeyboard():
    kb = [[InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å', callback_data='delete'),
           InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å —Å –∫–æ–Ω—Ñ–∏–≥–æ–º', callback_data='delete_config')],
          [InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è', callback_data='change_expire')]]

    markup = InlineKeyboardMarkup(inline_keyboard=kb)

# class ServerManageKeyboard():
#     kb = [[InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª-–≤–æ –∫–æ–Ω—Ñ–∏–≥–æ–≤', callback_data='change_count_configs')],
#           InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel')]
#
#     markup = InlineKeyboardMarkup(inline_keyboard=kb)


